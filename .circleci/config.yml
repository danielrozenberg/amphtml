version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.2.3
  node: circleci/node@4.7.0

push_and_pr_builds: &push_and_pr_builds
  filters:
    branches:
      ignore:
        - nightly

push_builds_only: &push_builds_only
  filters:
    branches:
      only:
        - main
        - /^amp-release-.*$/

release_builds_only: &release_builds_only
  filters:
    branches:
      only:
        - nightly
        - /^amp-release-.*$/

pr_builds_only: &pr_builds_only
  filters:
    branches:
      ignore:
        - main
        - /^amp-release-.*$/
        - nightly

experiment_job: &experiment_job
  parameters:
    exp:
      description: 'Which of the three (A/B/C) experiments to use'
      type: enum
      enum: ['A', 'B', 'C']
  environment:
    EXP: << parameters.exp >>

executors:
  base-docker-small:
    docker:
      - image: cimg/base:stable
    resource_class: small
  node-docker-medium:
    docker:
      - image: cimg/node:lts-browsers
    resource_class: medium
  node-docker-large:
    docker:
      - image: cimg/node:lts-browsers
    resource_class: large
  node-docker-xlarge:
    docker:
      - image: cimg/node:lts-browsers
    resource_class: xlarge
  jdk-docker-xlarge:
    docker:
      - image: cimg/openjdk:17.0-node
    resource_class: xlarge
  macos-medium:
    macos:
      xcode: 12.4.0
    resource_class: medium

commands:
  checkout_repo:
    parameters:
      save-git-cache:
        type: boolean
        default: false
    steps:
      - restore_cache:
          name: 'Restore Git Cache'
          keys:
            - git-cache-{{ arch }}-v2-{{ .Branch }}-{{ .Revision }}
            - git-cache-{{ arch }}-v2-{{ .Branch }}-
            - git-cache-{{ arch }}-v2-
      - checkout
      - when:
          condition: << parameters.save-git-cache >>
          steps:
            - save_cache:
                name: 'Save Git Cache'
                key: git-cache-{{ arch }}-v2-{{ .Branch }}-{{ .Revision }}
                paths:
                  - .git
  setup_node_environment:
    steps:
      - node/install:
          lts: true
          install-npm: false
      - node/install-packages
  setup_vm:
    steps:
      - attach_workspace:
          at: /tmp
      - run:
          name: 'Configure Temporary Workspace'
          command: |
            mv /tmp/workspace /tmp/restored-workspace
            mkdir -p /tmp/workspace
      - run:
          name: 'Maybe Gracefully Halt'
          command: /tmp/restored-workspace/maybe_gracefully_halt.sh
      - checkout_repo
      - run:
          name: 'Configure Development Environment'
          command: |
            ./.circleci/fetch_merge_commit.sh
            ./.circleci/restore_build_output.sh
            cat ./build-system/test-configs/hosts | sudo tee -a /etc/hosts
      - setup_node_environment
  teardown_vm:
    steps:
      - persist_to_workspace:
          root: /tmp
          paths:
            - workspace
  install_chrome:
    steps:
      - run:
          name: 'Get Pinned Chrome Version'
          command: ./.circleci/get_pinned_chrome_version.sh
      - browser-tools/install-chrome:
          chrome-version: ${CHROME_VERSION}
          replace-existing: true
      - browser-tools/install-chromedriver
  install_firefox:
    steps:
      - browser-tools/install-firefox
  install_edge:
    steps:
      - run:
          name: 'Install Microsoft Edge'
          command: ./.circleci/install_microsoft_edge.sh
  enable_safari_automation:
    steps:
      - run:
          name: 'Enable Safari Automation'
          command: |
            defaults write com.apple.Safari AllowRemoteAutomation 1
            defaults write com.apple.Safari IncludeDevelopMenu 1
            sudo safaridriver --enable
  store_test_output:
    steps:
      - store_artifacts:
          path: result-reports
      - store_test_results:
          path: result-reports
  store_filelist:
    steps:
      - store_artifacts:
          path: /tmp/filelist.txt
  skip_on_push_builds:
    steps:
      - when:
          condition:
            matches:
              pattern: ^main|amp-release-.*$
              value: << pipeline.git.branch >>
          steps:
            - run:
                name: 'Skip Job on Push Builds'
                command: circleci-agent step halt

jobs:
  initialize_repository:
    executor:
      name: base-docker-small
    steps:
      - checkout_repo:
          save-git-cache: true
      - run:
          name: 'Initialize Repository'
          command: ./.circleci/initialize_repo.sh
      - run:
          name: 'Check Config'
          command: ./.circleci/check_config.sh
      - run:
          name: 'Initialize Workspace'
          command: cp .circleci/maybe_gracefully_halt.sh /tmp/workspace
      - teardown_vm
  visual_diff_tests:
    executor:
      name: node-docker-large
    steps:
      - setup_vm
      - run:
          name: 'üèóÔ∏è'
          command: tar zxf dist.tar.gz
      - run:
          name: '‚≠ê Visual Diff Tests ‚≠ê'
          command: node build-system/pr-check/visual-diff-tests.js
      - store_test_output
      - teardown_vm

workflows:
  version: 2

  'CircleCI':
    jobs:
      - initialize_repository:
          name: 'Initialize Repository'
          <<: *push_and_pr_builds
      - visual_diff_tests:
          name: 'Visual Diff Tests'
          <<: *push_and_pr_builds
          requires:
            - 'Initialize Repository'
